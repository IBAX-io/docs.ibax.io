(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{373:function(a,e,t){"use strict";t.r(e);var s=t(14),r=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"daemon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#daemon"}},[a._v("#")]),a._v(" デーモン ")]),a._v(" "),e("p",[a._v("このセクションでは、技術的な観点からIBaxノード同士がどのように相互作用するかについて説明します。")]),a._v(" "),e("h2",{attrs:{id:"about-the-server-daemon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#about-the-server-daemon"}},[a._v("#")]),a._v(" サーバーデーモンについて ")]),a._v(" "),e("p",[a._v("サーバーデーモンは、ネットワークノード上で実行される必要があります。これはさまざまなサーバー機能を実行し、IBaxのブロックチェーンプロトコルをサポートします。ブロックチェーンネットワークでは、デーモンはブロックやトランザクションの配布、新しいブロックの生成、受信したブロックやトランザクションの検証を行い、フォークの問題を回避することができます。")]),a._v(" "),e("h3",{attrs:{id:"honor-node-daemon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#honor-node-daemon"}},[a._v("#")]),a._v(" 名誉ノードデーモン ")]),a._v(" "),e("p",[a._v("名誉ノードは次のサーバー デーモンを実行します。")]),a._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"#blockgenerator-daemon"}},[a._v("BlockGenerator daemon")])]),a._v(" "),e("p",[a._v("新しいブロックを生成します。")])]),a._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#blockcollection-daemon"}},[a._v("BlockCollection daemon")])]),a._v(" "),e("p",[a._v("他のノードから新しいブロックをダウンロードします。")])]),a._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#confirmations-daemon"}},[a._v("Confirmations daemon")])]),a._v(" "),e("p",[a._v("ノード上のブロックが他のほとんどのノードにも存在することを確認します。")])]),a._v(" "),e("li",[e("p",[e("a",{attrs:{href:"#disseminator-daemon"}},[a._v("Disseminator daemon")])]),a._v(" "),e("p",[a._v("トランザクションとブロックを他の信頼ノードに配布します。")])]),a._v(" "),e("li",[e("p",[a._v("QueueParserBlocks daemon")]),a._v(" "),e("p",[a._v("キュー内のブロックで、他のノードからのブロックを含みます。")]),a._v(" "),e("p",[a._v("ブロック処理ロジックは"),e("a",{attrs:{href:"#blockcollection-daemon"}},[a._v("BlockCollection daemon")]),a._v("と同じです。")])]),a._v(" "),e("li",[e("p",[a._v("QueueParserTx daemon")]),a._v(" "),e("p",[a._v("キュー内のトランザクションを検証します。")])]),a._v(" "),e("li",[e("p",[a._v("Scheduler daemon")]),a._v(" "),e("p",[a._v("スケジュールされた契約を実行します。")])])]),a._v(" "),e("h3",{attrs:{id:"guardian-node-daemon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#guardian-node-daemon"}},[a._v("#")]),a._v(" ガーディアンノードデーモン ")]),a._v(" "),e("p",[a._v("ガーディアンノードは以下のサーバーデーモンを実行します：")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#blockcollection-daemon"}},[a._v("BlockCollection daemon")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#confirmations-daemon"}},[a._v("Confirmations daemon")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#disseminator-daemon"}},[a._v("Disseminator daemon")])]),a._v(" "),e("li",[a._v("QueueParserTx")]),a._v(" "),e("li",[a._v("Scheduler")])]),a._v(" "),e("h2",{attrs:{id:"blockcollection-daemon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#blockcollection-daemon"}},[a._v("#")]),a._v(" BlockCollection daemon ")]),a._v(" "),e("p",[a._v("このデーモンはブロックをダウンロードし、他のネットワークノードとブロックチェーンを同期します。")]),a._v(" "),e("h3",{attrs:{id:"blockchain-synchronization"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#blockchain-synchronization"}},[a._v("#")]),a._v(" ブロックチェーンの同期 ")]),a._v(" "),e("p",[a._v("このデーモンは、ブロックチェーンネットワーク内の最大ブロック高さを決定し、新しいブロックを要求し、ブロックチェーンのフォーク問題を解決することで、ブロックチェーンを同期します。")]),a._v(" "),e("h4",{attrs:{id:"check-for-blockchain-updates"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#check-for-blockchain-updates"}},[a._v("#")]),a._v(" ブロックチェーンの更新を確認する ")]),a._v(" "),e("p",[a._v("このデーモンは、現在のブロックIDからすべての信頼ノードにリクエストを送信します。")]),a._v(" "),e("p",[a._v("デーモンを実行しているノードの現在のブロックIDが、どの信頼ノードの現在のブロックIDよりも小さい場合、ブロックチェーンネットワークノードは時代遅れと見なされます。")]),a._v(" "),e("h4",{attrs:{id:"download-new-blocks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#download-new-blocks"}},[a._v("#")]),a._v(" 新しいブロックをダウンロードする ")]),a._v(" "),e("p",[a._v("最大の現在のブロック高さを返すノードが最新のノードと見なされます。\nデーモンは、すべての未知のブロックをダウンロードします。")]),a._v(" "),e("h4",{attrs:{id:"solving-the-fork-issue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#solving-the-fork-issue"}},[a._v("#")]),a._v(" フォーク問題の解決 ")]),a._v(" "),e("p",[a._v("ブロックチェーンでフォークが検出された場合、デーモンは共通の親ブロックまでブロックをダウンロードしてフォークを後退させます。\n共通の親ブロックが見つかったら、デーモンを実行しているノードでブロックチェーンのロールバックが行われ、最新のブロックが含まれるまで正しいブロックがブロックチェーンに追加されます。")]),a._v(" "),e("h3",{attrs:{id:"tables-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tables-1"}},[a._v("#")]),a._v(" テーブル ")]),a._v(" "),e("p",[a._v("BlocksCollectionデーモンは次のテーブルを使用します：")]),a._v(" "),e("ul",[e("li",[a._v("block_chain")]),a._v(" "),e("li",[a._v("transactions")]),a._v(" "),e("li",[a._v("transactions_status")]),a._v(" "),e("li",[a._v("info_block")])]),a._v(" "),e("h3",{attrs:{id:"request-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-1"}},[a._v("#")]),a._v(" リクエスト ")]),a._v(" "),e("p",[a._v("BlockCollectionデーモンは、他のデーモンに対して次のリクエストを送信します：")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#type-10"}},[a._v("Type 10")]),a._v("は、すべての信頼ノードの中で最大のブロックIDを指します。")]),a._v(" "),e("li",[e("a",{attrs:{href:"#type-7"}},[a._v("Type 7")]),a._v("は、最大のブロックIDを持つデータを指します。")])]),a._v(" "),e("h2",{attrs:{id:"blockgenerator-daemon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#blockgenerator-daemon"}},[a._v("#")]),a._v(" BlockGenerator daemon ")]),a._v(" "),e("p",[a._v("BlockGeneratorデーモンは新しいブロックを生成します。")]),a._v(" "),e("h3",{attrs:{id:"pre-verification"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pre-verification"}},[a._v("#")]),a._v(" 事前検証 ")]),a._v(" "),e("p",[a._v("BlockGeneratorデーモンは、ブロックチェーンの最新ブロックを分析して新しいブロック生成計画を立てます。")]),a._v(" "),e("p",[a._v("以下の条件が満たされている場合、新しいブロックを生成できます：")]),a._v(" "),e("ul",[e("li",[a._v("最新のブロックを生成したノードが、信頼ノードリスト内のノードであり、デーモンを実行していること。")]),a._v(" "),e("li",[a._v("最新の未検証ブロックが生成されてからの経過時間が最も短いこと。")])]),a._v(" "),e("h3",{attrs:{id:"block-generation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#block-generation"}},[a._v("#")]),a._v(" ブロック生成 ")]),a._v(" "),e("p",[a._v("デーモンによって生成される新しいブロックには、他のノードの"),e("a",{attrs:{href:"#disseminator-daemon"}},[a._v("Disseminatorデーモン")]),a._v("から受け取ることができるすべての新しいトランザクションが含まれます。また、デーモンを実行しているノードで生成されることもあります。生成されたブロックは、ノードのデータベースに保存されます。")]),a._v(" "),e("h3",{attrs:{id:"tables-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tables-2"}},[a._v("#")]),a._v(" テーブル ")]),a._v(" "),e("p",[a._v("BlockGeneratorデーモンは以下のテーブルを使用します：")]),a._v(" "),e("ul",[e("li",[a._v("block_chain（新しいブロックを保存する）")]),a._v(" "),e("li",[a._v("transactions")]),a._v(" "),e("li",[a._v("transactions_status")]),a._v(" "),e("li",[a._v("info_block")])]),a._v(" "),e("h3",{attrs:{id:"request-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-2"}},[a._v("#")]),a._v(" リクエスト ")]),a._v(" "),e("p",[a._v("BlockGeneratorデーモンは他のデーモンに対してリクエストを行いません。")]),a._v(" "),e("h2",{attrs:{id:"disseminator-daemon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#disseminator-daemon"}},[a._v("#")]),a._v(" Disseminatorデーモン ")]),a._v(" "),e("p",[a._v("Disseminatorデーモンは、トランザクションとブロックをすべての信頼ノードに送信します。")]),a._v(" "),e("h3",{attrs:{id:"guardian-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#guardian-node"}},[a._v("#")]),a._v(" ガーディアンノード ")]),a._v(" "),e("p",[a._v("ガーディアンノードで作業している場合、デーモンはノードで生成されたトランザクションをすべての信頼ノードに送信します。")]),a._v(" "),e("h3",{attrs:{id:"honor-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#honor-node"}},[a._v("#")]),a._v(" 信頼ノード ")]),a._v(" "),e("p",[a._v("信頼ノードで作業している場合、デーモンは生成されたブロックとトランザクションのハッシュをすべての信頼ノードに送信します。")]),a._v(" "),e("p",[a._v("その後、信頼ノードは自身が知らないトランザクションのリクエストに応答します。デーモンは完全なトランザクションデータを応答として送信します。")]),a._v(" "),e("h3",{attrs:{id:"tables-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tables-3"}},[a._v("#")]),a._v(" テーブル ")]),a._v(" "),e("p",[a._v("Disseminatorデーモンは以下のテーブルを使用します：")]),a._v(" "),e("ul",[e("li",[a._v("transactions")])]),a._v(" "),e("h3",{attrs:{id:"request-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-3"}},[a._v("#")]),a._v(" リクエスト ")]),a._v(" "),e("p",[a._v("Disseminatorデーモンは他のデーモンに対して次のリクエストを送信します：")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#type-1"}},[a._v("Type 1")]),a._v("：トランザクションとブロックのハッシュを信頼ノードに送信します。")]),a._v(" "),e("li",[e("a",{attrs:{href:"#type-2"}},[a._v("Type 2")]),a._v("：信頼ノードからトランザクションデータを受信します。")])]),a._v(" "),e("h2",{attrs:{id:"confirmations-daemon"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#confirmations-daemon"}},[a._v("#")]),a._v(" Confirmationsデーモン ")]),a._v(" "),e("p",[a._v("Confirmationsデーモンは、自身のノードに存在するすべてのブロックがほとんどの他のノードに存在するかどうかをチェックします。")]),a._v(" "),e("h3",{attrs:{id:"block-confirmation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#block-confirmation"}},[a._v("#")]),a._v(" ブロックの確認 ")]),a._v(" "),e("p",[a._v("ネットワーク内の複数のノードによって確認されたブロックは、確認済みのブロックと見なされます。")]),a._v(" "),e("p",[a._v("デーモンは、データベース内で現在確認されていない最初のブロックから順番にすべてのブロックを確認します。")]),a._v(" "),e("p",[a._v("各ブロックは以下の方法で確認されます：")]),a._v(" "),e("ul",[e("li",[a._v("確認中のブロックのIDを含むリクエストをすべての信頼ノードに送信します。")]),a._v(" "),e("li",[a._v("すべての信頼ノードがブロックのハッシュに応答します。")]),a._v(" "),e("li",[a._v("応答されたハッシュがデーモンノード上のブロックのハッシュと一致する場合、確認カウンタの値が増加します。一致しない場合は、キャンセルカウンタの値が増加します。")])]),a._v(" "),e("h3",{attrs:{id:"tables-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tables-4"}},[a._v("#")]),a._v(" テーブル ")]),a._v(" "),e("p",[a._v("Confirmationsデーモンは以下のテーブルを使用します：")]),a._v(" "),e("ul",[e("li",[a._v("confirmation")]),a._v(" "),e("li",[a._v("info_block")])]),a._v(" "),e("h3",{attrs:{id:"request-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-4"}},[a._v("#")]),a._v(" リクエスト ")]),a._v(" "),e("p",[a._v("Confirmationsデーモンは他のデーモンに対して次のリクエストを送信します：")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#type-4"}},[a._v("Type 4")]),a._v("：信頼ノードからブロックのハッシュをリクエストします。")])]),a._v(" "),e("h2",{attrs:{id:"tcp-service-protocol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp-service-protocol"}},[a._v("#")]),a._v(" TCPサービスプロトコル ")]),a._v(" "),e("p",[a._v("TCPサービスプロトコルは、BlocksCollection、Disseminator、Confirmationデーモンへのリクエストにおいて、バイナリプロトコルを使用し、信頼ノードとガーディアンノード上で動作します。")]),a._v(" "),e("h2",{attrs:{id:"request-type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-type"}},[a._v("#")]),a._v(" リクエストタイプ ")]),a._v(" "),e("p",[a._v("各リクエストには、リクエストの最初の2バイトで定義されるタイプがあります。")]),a._v(" "),e("h2",{attrs:{id:"type-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-1"}},[a._v("#")]),a._v(" Type 1 ")]),a._v(" "),e("h4",{attrs:{id:"request-sender-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-sender-1"}},[a._v("#")]),a._v(" リクエスト送信元 ")]),a._v(" "),e("p",[a._v("このリクエストは"),e("a",{attrs:{href:"#disseminator-daemon"}},[a._v("Disseminatorデーモン")]),a._v("によって送信されます。")]),a._v(" "),e("h4",{attrs:{id:"request-data-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-data-1"}},[a._v("#")]),a._v(" リクエストデータ ")]),a._v(" "),e("p",[a._v("トランザクションとブロックのハッシュ。")]),a._v(" "),e("h4",{attrs:{id:"request-processing-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-processing-1"}},[a._v("#")]),a._v(" リクエスト処理 ")]),a._v(" "),e("p",[a._v("ブロックのハッシュがブロックキューに追加されます。")]),a._v(" "),e("p",[a._v("トランザクションのハッシュを分析および検証し、ノード上にまだ表示されていないトランザクションを選択します。")]),a._v(" "),e("h4",{attrs:{id:"response-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#response-1"}},[a._v("#")]),a._v(" レスポンス ")]),a._v(" "),e("p",[a._v("なし。リクエストの処理後、"),e("a",{attrs:{href:"#type-2"}},[a._v("Type 2")]),a._v("のリクエストが発行されます。")]),a._v(" "),e("h2",{attrs:{id:"type-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-2"}},[a._v("#")]),a._v(" Type 2 ")]),a._v(" "),e("h4",{attrs:{id:"request-sender-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-sender-2"}},[a._v("#")]),a._v(" リクエスト送信元 ")]),a._v(" "),e("p",[a._v("このリクエストは"),e("a",{attrs:{href:"#disseminator-daemon"}},[a._v("Disseminatorデーモン")]),a._v("によって送信されます。")]),a._v(" "),e("h4",{attrs:{id:"request-data-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-data-2"}},[a._v("#")]),a._v(" リクエストデータ ")]),a._v(" "),e("p",[a._v("データサイズを含むトランザクションデータ：")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("data_size (4バイト)")]),a._v(" "),e("p",[a._v("トランザクションデータのバイト数。")])]),a._v(" "),e("li",[e("p",[a._v("data (data_sizeバイト)")]),a._v(" "),e("p",[a._v("トランザクションデータ。")])])]),a._v(" "),e("h4",{attrs:{id:"request-processing-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-processing-2"}},[a._v("#")]),a._v(" リクエスト処理 ")]),a._v(" "),e("p",[a._v("トランザクションを検証し、トランザクションキューに追加します。")]),a._v(" "),e("h4",{attrs:{id:"response-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#response-2"}},[a._v("#")]),a._v(" レスポンス ")]),a._v(" "),e("p",[a._v("なし。")]),a._v(" "),e("h2",{attrs:{id:"type-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-4"}},[a._v("#")]),a._v(" Type 4 ")]),a._v(" "),e("h4",{attrs:{id:"request-sender-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-sender-3"}},[a._v("#")]),a._v(" リクエスト送信元 ")]),a._v(" "),e("p",[a._v("このリクエストは"),e("a",{attrs:{href:"#confirmations-daemon"}},[a._v("Confirmationsデーモン")]),a._v("によって送信されます。")]),a._v(" "),e("h4",{attrs:{id:"request-data-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-data-3"}},[a._v("#")]),a._v(" リクエストデータ ")]),a._v(" "),e("p",[a._v("ブロックID。")]),a._v(" "),e("h4",{attrs:{id:"response-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#response-3"}},[a._v("#")]),a._v(" レスポンス ")]),a._v(" "),e("p",[a._v("ブロックハッシュ。")]),a._v(" "),e("p",[a._v("このIDのブロックが存在しない場合は"),e("code",[a._v("0")]),a._v("を返します。")]),a._v(" "),e("h2",{attrs:{id:"type-7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-7"}},[a._v("#")]),a._v(" Type 7 ")]),a._v(" "),e("h4",{attrs:{id:"request-sender-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-sender-4"}},[a._v("#")]),a._v(" リクエスト送信元 ")]),a._v(" "),e("p",[a._v("このリクエストは"),e("a",{attrs:{href:"#blockcollection-daemon"}},[a._v("BlockCollectionデーモン")]),a._v("によって送信されます。")]),a._v(" "),e("h4",{attrs:{id:"request-data-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-data-4"}},[a._v("#")]),a._v(" Request data ")]),a._v(" "),e("p",[a._v("ブロックID。")]),a._v(" "),e("ul",[e("li",[a._v("block_id (4 bytes)")])]),a._v(" "),e("h4",{attrs:{id:"response-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#response-4"}},[a._v("#")]),a._v(" レスポンス ")]),a._v(" "),e("p",[a._v("ブロックデータを含む、データサイズを含むレスポンス。")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("data_size (4バイト)")]),a._v(" "),e("p",[a._v("ブロックデータのバイト数。")])]),a._v(" "),e("li",[e("p",[a._v("data (data_sizeバイト)")]),a._v(" "),e("p",[a._v("ブロックデータ。")])])]),a._v(" "),e("p",[a._v("このIDのブロックが存在しない場合、接続は閉じられます。")]),a._v(" "),e("h2",{attrs:{id:"type-10"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-10"}},[a._v("#")]),a._v(" Type 10 ")]),a._v(" "),e("h4",{attrs:{id:"request-sender-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-sender-5"}},[a._v("#")]),a._v(" リクエスト送信元 ")]),a._v(" "),e("p",[a._v("このリクエストは"),e("a",{attrs:{href:"#blockcollection-daemon"}},[a._v("BlockCollection daemon")]),a._v("によって送信されます。")]),a._v(" "),e("h4",{attrs:{id:"request-data-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-data-5"}},[a._v("#")]),a._v(" リクエストデータ ")]),a._v(" "),e("p",[a._v("なし。")]),a._v(" "),e("h4",{attrs:{id:"response-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#response-5"}},[a._v("#")]),a._v(" レスポンス ")]),a._v(" "),e("p",[a._v("ブロックID。")]),a._v(" "),e("ul",[e("li",[a._v("block_id (4 bytes)")])])])}),[],!1,null,null,null);e.default=r.exports}}]);